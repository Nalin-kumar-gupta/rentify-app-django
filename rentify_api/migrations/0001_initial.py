# Generated by Django 4.2.13 on 2024-05-26 17:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import rentify_api.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('tenant', 'Tenant')], help_text='Role of the user', max_length=10)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('permanent_address', models.TextField(unique=True)),
                ('id_proof', models.FileField(upload_to=rentify_api.models.user_directory_path)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to=rentify_api.models.user_directory_path)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RealEstateProperty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Title of the property listing', max_length=200, unique=True)),
                ('description', models.TextField(help_text='Detailed description of the property')),
                ('address', models.CharField(help_text='Full address of the property', max_length=255, unique=True)),
                ('city', models.CharField(help_text='City where the property is located', max_length=100)),
                ('state', models.CharField(help_text='State where the property is located', max_length=100)),
                ('zip_code', models.CharField(help_text='Postal code of the property location', max_length=20)),
                ('country', models.CharField(help_text='Country where the property is located', max_length=100)),
                ('property_type', models.CharField(choices=[('apartment', 'Apartment'), ('house', 'House'), ('condo', 'Condominium'), ('townhouse', 'Townhouse'), ('studio', 'Studio'), ('loft', 'Loft')], help_text='Type of the property', max_length=50)),
                ('bedrooms', models.PositiveIntegerField(help_text='Number of bedrooms')),
                ('bathrooms', models.PositiveIntegerField(help_text='Number of bathrooms')),
                ('square_feet', models.PositiveIntegerField(help_text='Total area in square feet')),
                ('furnished', models.BooleanField(default=False, help_text='Is the property furnished?')),
                ('pet_friendly', models.BooleanField(default=False, help_text='Is the property pet-friendly?')),
                ('available_from', models.DateField(help_text='Date from which the property is available for rent')),
                ('rent_price', models.DecimalField(decimal_places=2, help_text='Monthly rent price in USD', max_digits=10)),
                ('security_deposit', models.DecimalField(decimal_places=2, help_text='Security deposit amount in USD', max_digits=10)),
                ('lease_term', models.CharField(choices=[('month-to-month', 'Month-to-Month'), ('6-months', '6 Months'), ('12-months', '12 Months'), ('24-months', '24 Months')], help_text='Lease term duration', max_length=50)),
                ('contact_name', models.CharField(help_text='Name of the contact person', max_length=100)),
                ('contact_phone', models.CharField(help_text='Phone number of the contact person', max_length=20)),
                ('contact_email', models.EmailField(help_text='Email address of the contact person', max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the property listing was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the property listing was last updated')),
                ('owner', models.ForeignKey(help_text='Owner of the property', on_delete=django.db.models.deletion.CASCADE, related_name='owned_properties', to='rentify_api.profile')),
            ],
            options={
                'verbose_name': 'Real Estate Property',
                'verbose_name_plural': 'Real Estate Properties',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Invite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rentify_api.realestateproperty')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_invites', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invites', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InterestMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=50)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rentify_api.profile')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rentify_api.realestateproperty')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
